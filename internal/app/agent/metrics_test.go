package agent

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func Test_metrics_Poll(t *testing.T) {
	m := newMetrics()
	m.Poll()
	assert.GreaterOrEqual(t, m.Alloc, gauge(0))
	assert.GreaterOrEqual(t, m.BuckHashSys, gauge(0))
	assert.GreaterOrEqual(t, m.Frees, gauge(0))
	assert.GreaterOrEqual(t, m.GCCPUFraction, gauge(0))
	assert.GreaterOrEqual(t, m.GCSys, gauge(0))
	assert.GreaterOrEqual(t, m.HeapAlloc, gauge(0))
	assert.GreaterOrEqual(t, m.HeapIdle, gauge(0))
	assert.GreaterOrEqual(t, m.HeapInuse, gauge(0))
	assert.GreaterOrEqual(t, m.HeapObjects, gauge(0))
	assert.GreaterOrEqual(t, m.HeapReleased, gauge(0))
	assert.GreaterOrEqual(t, m.HeapSys, gauge(0))
	assert.GreaterOrEqual(t, m.LastGC, gauge(0))
	assert.GreaterOrEqual(t, m.Lookups, gauge(0))
	assert.GreaterOrEqual(t, m.MCacheInuse, gauge(0))
	assert.GreaterOrEqual(t, m.MCacheSys, gauge(0))
	assert.GreaterOrEqual(t, m.MSpanInuse, gauge(0))
	assert.GreaterOrEqual(t, m.MSpanSys, gauge(0))
	assert.GreaterOrEqual(t, m.Mallocs, gauge(0))
	assert.GreaterOrEqual(t, m.NextGC, gauge(0))
	assert.GreaterOrEqual(t, m.NumForcedGC, gauge(0))
	assert.GreaterOrEqual(t, m.NumGC, gauge(0))
	assert.GreaterOrEqual(t, m.OtherSys, gauge(0))
	assert.GreaterOrEqual(t, m.PauseTotalNs, gauge(0))
	assert.GreaterOrEqual(t, m.StackInuse, gauge(0))
	assert.GreaterOrEqual(t, m.StackSys, gauge(0))
	assert.GreaterOrEqual(t, m.Sys, gauge(0))
	assert.GreaterOrEqual(t, m.TotalAlloc, gauge(0))
	assert.GreaterOrEqual(t, m.RandomValue, gauge(0))
	assert.Equal(t, m.PollCount, counter(1))
	m.Poll()
	assert.Equal(t, m.PollCount, counter(2))
}

func Test_metrics_Read(t *testing.T) {
	m := newMetrics()
	m.Poll()
	m.Read(func(m *metrics) {
		assert.GreaterOrEqual(t, m.Alloc, gauge(0))
		assert.GreaterOrEqual(t, m.BuckHashSys, gauge(0))
		assert.GreaterOrEqual(t, m.Frees, gauge(0))
		assert.GreaterOrEqual(t, m.GCCPUFraction, gauge(0))
		assert.GreaterOrEqual(t, m.GCSys, gauge(0))
		assert.GreaterOrEqual(t, m.HeapAlloc, gauge(0))
		assert.GreaterOrEqual(t, m.HeapIdle, gauge(0))
		assert.GreaterOrEqual(t, m.HeapInuse, gauge(0))
		assert.GreaterOrEqual(t, m.HeapObjects, gauge(0))
		assert.GreaterOrEqual(t, m.HeapReleased, gauge(0))
		assert.GreaterOrEqual(t, m.HeapSys, gauge(0))
		assert.GreaterOrEqual(t, m.LastGC, gauge(0))
		assert.GreaterOrEqual(t, m.Lookups, gauge(0))
		assert.GreaterOrEqual(t, m.MCacheInuse, gauge(0))
		assert.GreaterOrEqual(t, m.MCacheSys, gauge(0))
		assert.GreaterOrEqual(t, m.MSpanInuse, gauge(0))
		assert.GreaterOrEqual(t, m.MSpanSys, gauge(0))
		assert.GreaterOrEqual(t, m.Mallocs, gauge(0))
		assert.GreaterOrEqual(t, m.NextGC, gauge(0))
		assert.GreaterOrEqual(t, m.NumForcedGC, gauge(0))
		assert.GreaterOrEqual(t, m.NumGC, gauge(0))
		assert.GreaterOrEqual(t, m.OtherSys, gauge(0))
		assert.GreaterOrEqual(t, m.PauseTotalNs, gauge(0))
		assert.GreaterOrEqual(t, m.StackInuse, gauge(0))
		assert.GreaterOrEqual(t, m.StackSys, gauge(0))
		assert.GreaterOrEqual(t, m.Sys, gauge(0))
		assert.GreaterOrEqual(t, m.TotalAlloc, gauge(0))
		assert.GreaterOrEqual(t, m.RandomValue, gauge(0))
		assert.Equal(t, m.PollCount, counter(1))
	})
}
